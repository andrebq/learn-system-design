make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Sat Jun 18 18:38:53 2022

# Variables

# environment
JENV_SHELL = zsh
 
# automatic
?F = $(notdir $?)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/andre.alves/Source/github.com/andrebq/learn-system-design
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# environment
WEZTERM_UNIX_SOCKET = /Users/andre.alves/.local/share/wezterm/gui-sock-607
# makefile (from `Support.mk', line 1)
MAKEFILE_LIST :=  Makefile Env.mk Docker.mk Stress.mk ControlPlane.mk Fleet.mk Support.mk
# environment
WEZTERM_CONFIG_FILE = /Users/andre.alves/.config/wezterm/wezterm.lua
# makefile (from `Env.mk', line 5)
CONTAINER_NAME = learn-system-design
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:/opt/homebrew/share/info:
# makefile (from `Env.mk', line 8)
CONTROL_PLANE_LOCAL_PORT = 9002
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/yn/1jfkvjjs467dnd6nm3jncw5m0000gp/T/vscode-ipc-8d283b58-adf6-4b68-9cef-ff2e63d7273c.sock
# environment
VSCODE_CWD = /
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /Users/andre.alves/.jenv/shims:/Users/andre.alves/.jenv/bin:/Users/andre.alves/gcloud/google-cloud-sdk/bin:/Users/andre.alves/Bin:/Users/andre.alves/go/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/usr/local/munki:/Users/andre.alves/.jenv/shims:/Users/andre.alves/.jenv/bin:/Users/andre.alves/.sdkman/candidates/java/current/bin:/Users/andre.alves/gcloud/google-cloud-sdk/bin:/Users/andre.alves/Bin:/Users/andre.alves/go/bin:/opt/homebrew/bin:/opt/homebrew/sbin
# makefile (from `Env.mk', line 3)
IMAGE_FULL_NAME = $(IMAGE_REPO):$(IMAGE_TAG)
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
SDKMAN_DIR = /Users/andre.alves/.sdkman
# environment
SDKMAN_CANDIDATES_API = https://api.sdkman.io/2
# environment
GOPATH = /Users/andre.alves/go
# environment
LaunchInstanceID = 920968EA-8778-4B91-BD94-2A92D39367EB
# makefile (from `Env.mk', line 2)
IMAGE_TAG = latest
# environment
SDKMAN_PLATFORM = darwinarm64
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.SFkN2qCTnX/Listeners
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/andre.alves/Source/github.com/andrebq/learn-system-design
# makefile (from `Env.mk', line 11)
LSD_STRESS_TEST_SERVE = 127.0.0.1:$(STRESS_LOCAL_PORT)
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/homebrew/share/man:
# environment
GOMODCACHE = /Users/andre.alves/go/pkg/mod
# environment
HOME = /Users/andre.alves
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/andre.alves/Library/Application Support/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = andre.alves
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# makefile (from `Env.mk', line 6)
LOCAL_PORT = 9000
# makefile (from `Env.mk', line 10)
LSD_CONTROL_PLANE_BIND = 127.0.0.1:$(CONTROL_PLANE_LOCAL_PORT)
# environment
ZSH = /Users/andre.alves/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# environment
SDKMAN_VERSION = 5.15.0
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from `Env.mk', line 1)
IMAGE_REPO = andrebq/learn-system-desig
# environment
SHLVL = 3
# environment
WEZTERM_EXECUTABLE_DIR = /Applications/WezTerm.app/Contents/MacOS
# default
MAKE_VERSION := 3.81
# environment
USER = andre.alves
# environment
WEZTERM_CONFIG_DIR = /Users/andre.alves/.config/wezterm
# makefile
.DEFAULT_GOAL := default
# environment
JENV_LOADED = 1
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Env.mk', line 7)
STRESS_LOCAL_PORT = 9001
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# environment
TERM_PROGRAM = WezTerm
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/yn/1jfkvjjs467dnd6nm3jncw5m0000gp/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/andre.alves/Library/Application Support/Code/1.68.1-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 20220408-101518-b908e2dd
# environment
NVM_DIR = /Users/andre.alves/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.4212894.4212900
# environment
HOMEBREW_PREFIX = /opt/homebrew
 
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
WEZTERM_PANE = 1
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F6:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# environment
WEZTERM_EXECUTABLE = /Applications/WezTerm.app/Contents/MacOS/wezterm-gui
# automatic
<F = $(notdir $<)
# environment
SDKMAN_CANDIDATES_DIR = /Users/andre.alves/.sdkman/candidates
# environment
PAGER = less
# environment
LC_ALL = C
# environment
SECURITYSESSIONID = 186b2
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
LIBGL_ALWAYS_SOFTWARE = true
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 21526
# environment
NVM_RC_VERSION = 
# variable set hash-table stats:
# Load=105/1024=10%, Rehash=0, Collisions=9/148=6%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777232, inode 2813839): 31 files, no impossibilities.

# 31 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

stop:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Docker.mk', line 15):
	docker kill $(CONTAINER_NAME)
	

uptrace-up: dist
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Support.mk', line 19):
	cd localfiles && ../dist/lsd support uptrace docker-compose -compose-file uptrace.compose.yaml
	docker-compose -f ./localfiles/uptrace.compose.yaml up
	

# Not a target:
ControlPlane.mk:
#  Implicit rule search has been done.
#  Last modified 2022-03-06 20:23:06
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
EnvLocal.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

start-stress-test: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Stress.mk', line 4):
	./dist/lsd stress start --stressor http://$(LSD_STRESS_TEST_SERVE)/start-test --target $(target)
	

uptrace-down:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Support.mk', line 23):
	docker-compose -f ./localfiles/uptrace.compose.yaml down
	

# Not a target:
Stress.mk:
#  Implicit rule search has been done.
#  Last modified 2022-03-06 20:22:48
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

jaeger-up: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Support.mk', line 5):
	cd localfiles && ../dist/lsd support jaeger docker-compose
	docker-compose -f ./localfiles/jaeger.compose.yaml up
	

.PHONY: default test tidy watch dist serve-local install-statik generate build run stop start-stress-test serve-stress-test serve-control start-fleet jaeger-up jaeger-down
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Support.mk:
#  Implicit rule search has been done.
#  Last modified 2022-03-21 20:25:07
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

jaeger-down:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Support.mk', line 9):
	docker-compose -f ./localfiles/jaeger.compose.yaml down
	

# Not a target:
Fleet.mk:
#  Implicit rule search has been done.
#  Last modified 2022-03-21 20:48:36
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

start-fleet: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Fleet.mk', line 4):
	cp -Rv ./examples/* ./dist/examples/
	./dist/lsd --otel.service.name "fleet-manager" \
	fleet serve-local \
	--scriptBase $(PWD)/examples/ \
	--app echo-handler \
	--app backend \
	--app frontend \
	--app database \
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-03-19 20:36:22
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 14):
	go test ./...
	

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Docker.mk', line 4):
	docker build -t $(IMAGE_FULL_NAME) -f Dockerfile .
	

serve-control: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `ControlPlane.mk', line 4):
	./dist/lsd control-plane serve --bind $(LSD_CONTROL_PLANE_BIND)
	

default: test
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

watch: generate
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 32):
	modd -f modd.conf
	

generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 35):
	go generate ./...
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Docker.mk', line 7):
	docker run --rm -ti \
	-v $(PWD):$(PWD) \
	-w $(PWD) \
	-p $(LOCAL_PORT):8080 \
	--name $(CONTAINER_NAME) \
	$(IMAGE_FULL_NAME)
	

serve-stress-test: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Stress.mk', line 13):
	./dist/lsd stress serve --bind $(LSD_STRESS_TEST_SERVE)
	

# Not a target:
Docker.mk:
#  Implicit rule search has been done.
#  Last modified 2022-03-04 21:53:35
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

dist:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 21):
	go build -o ./dist/lsd ./cmd/lsd
	

grafana-up: dist
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Support.mk', line 12):
	cd localfiles && ../dist/lsd support grafana docker-compose -compose-file grafana.compose.yaml
	docker-compose -f ./localfiles/grafana.compose.yaml up
	

tidy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 17):
	go mod tidy
	go fmt ./...
	

grafana-down:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Support.mk', line 16):
	docker-compose -f ./localfiles/grafana.compose.yaml down
	

install-statik:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 38):
	go install github.com/rakyll/statik@v0.1.7
	

serve-local: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 24):
	cp -Rv ./examples/* ./dist/examples/
	./dist/lsd serve \
	--bind 127.0.0.1:$(LOCAL_PORT) \
	--handler-file $(PWD)/examples/echo-handler/handler.lua \
	--public-endpoint http://127.0.0.1:$(LOCAL_PORT)
	

# Not a target:
Env.mk:
#  Implicit rule search has been done.
#  Last modified 2022-03-06 20:22:41
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# files hash-table stats:
# Load=33/1024=3%, Rehash=0, Collisions=0/84=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 8
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4012 / max = 4012 / min = 4012 / avg = 4012

# Finished Make data base on Sat Jun 18 18:38:53 2022

 
